/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class Midi */

#ifndef _Included_Midi
#define _Included_Midi
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     Midi
 * Method:    Initialise
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Midi_Initialise
  (JNIEnv *, jclass);

/*
 * Class:     Midi
 * Method:    DeInitialisePatchEditor
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Midi_DeInitialisePatchEditor
  (JNIEnv *, jclass);

/*
 * Class:     Midi
 * Method:    ConfigChanged
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_Midi_ConfigChanged
  (JNIEnv *, jclass);

/*
 * Class:     Midi
 * Method:    SetReferenceData
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_Midi_SetReferenceData
  (JNIEnv *, jclass);

/*
 * Class:     Midi
 * Method:    LoadConfig
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_Midi_LoadConfig
  (JNIEnv *, jclass, jstring);

/*
 * Class:     Midi
 * Method:    SaveConfig
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_Midi_SaveConfig
  (JNIEnv *, jclass, jstring);

/*
 * Class:     Midi
 * Method:    SendFactoryDefault
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_Midi_SendFactoryDefault
  (JNIEnv *, jclass);

/*
 * Class:     Midi
 * Method:    SendMidiData
 * Signature: (BBBI)Z
 */
JNIEXPORT jboolean JNICALL Java_Midi_SendMidiData
  (JNIEnv *, jclass, jbyte, jbyte, jbyte, jint);

/*
 * Class:     Midi
 * Method:    SendReadConfig
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_Midi_SendReadConfig
  (JNIEnv *, jclass);

/*
 * Class:     Midi
 * Method:    CancelWrite
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Midi_CancelWrite
  (JNIEnv *, jclass);

/*
 * Class:     Midi
 * Method:    SetOutputDevice
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_Midi_SetOutputDevice
  (JNIEnv *, jclass, jint);

/*
 * Class:     Midi
 * Method:    SetInputDevice
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_Midi_SetInputDevice
  (JNIEnv *, jclass, jint);

/*
 * Class:     Midi
 * Method:    NumInputDevice
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Midi_NumInputDevice
  (JNIEnv *, jclass);

/*
 * Class:     Midi
 * Method:    NumOutputDevice
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Midi_NumOutputDevice
  (JNIEnv *, jclass);

/*
 * Class:     Midi
 * Method:    GetInputDeviceName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Midi_GetInputDeviceName
  (JNIEnv *, jclass, jint);

/*
 * Class:     Midi
 * Method:    GetOutputDeviceName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Midi_GetOutputDeviceName
  (JNIEnv *, jclass, jint);

/*
 * Class:     Midi
 * Method:    SetMidiMerge
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_Midi_SetMidiMerge
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     Midi
 * Method:    GetMidiMerge
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_Midi_GetMidiMerge
  (JNIEnv *, jclass);

/*
 * Class:     Midi
 * Method:    SendConfig
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Midi_SendConfig
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
